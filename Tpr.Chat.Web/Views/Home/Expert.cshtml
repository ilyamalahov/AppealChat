@using Tpr.Chat.Core.Models
@model Tpr.Chat.Web.Models.IndexViewModel

@{
    ViewData["Title"] = "Expert";
}

@section Styles {
    <link rel="stylesheet" type="text/css" href="~/css/expert.css" />
}

@section Scripts {
    <script>
        var appealId = "@Model.ChatSession.AppealId";
        var expertKey = "@Model.ExpertKey";
    </script>
    <script type="text/javascript" src="~/js/luxon.min.js"></script>
    <script type="text/javascript" src="~/lib/signalr/signalr.js"></script>
    <script type="text/javascript" src="~/js/expert.js"></script>
}

<div class="main">
    <div class="main-header">
        <div class="header-title">Участник аппеляции</div>
        <div class="online-status" id="onlineStatus"></div>
        <span class="write-status" id="writeStatus">Печатает...</span>
    </div>
    <div style="flex: auto; display: flex; position:relative;">
        <ul id="messagesList" class="message-history">
            @foreach (var message in Model.Messages)
            {
                var messageDate = message.CreateDate.ToString("T");

                var isExpert = message.NickName.Contains("Член КК");

                var isCurrent = isExpert && message.NickName.Contains(Model.ExpertKey.ToString());

                var nickname = isCurrent ? "Вы" : message.NickName;

                <li style="position: relative;">
                    <div class="message @(isExpert ? "place-left" : "place-right")">
                        @* padding: 5px 10px;
            z-index: 10;
            box-shadow: 0 0 15px 0 #a6cae4;
            color: #3387dd;
                                <div style="
        position: absolute;
        bottom: 50%;
        width: 100%;
        border-bottom: 1px solid #9ec9ec;
        z-index: 0;
        "></div>*@
                        @switch (message.ChatMessageTypeId)
                        {
                            case ChatMessageTypes.Joined:
                                @nickname @(isCurrent ? " подключились" : " подключился") @:к консультации <b class="message-date">@messageDate</b>
                                break;
                            case ChatMessageTypes.Message:
                                <div class="message-bubble">@Html.Raw(message.MessageString)</div>@nickname <b class="message-date">@messageDate</b>
                                break;
                            case ChatMessageTypes.Leave:
                                @nickname @(isCurrent ? " покинули" : " покинул") @:консультацию <b class="message-date">@messageDate</b>
                                break;
                        }
                    </div>
                </li>
            }
        </ul>
        <div id="quickReplyBlock" class="quick-reply">
            <div class="filter-block"><input id="filterText" class="filter-text" type="text" placeholder="Введите текст" /></div>
            <ul id="replyList" class="reply-list">
                @foreach (var reply in Model.QuickReplies)
                {
                    <li>@reply.MessageText</li>
                }
            </ul>
        </div>
    </div>
    <div id="interactiveBlock" class="main-footer">
        <button id="quickReplyButton" class="custom-button round-button reply-button">
            <img src="~/images/png/chat.png" style="height: 20px;" alt="QuickReply" />
        </button>
        <textarea id="messageText" class="message-text" data-min-rows="1" rows="1" autocomplete="off" placeholder="Введите сообщение..."></textarea>
        <button id="sendButton" class="custom-button round-button send-button">
            <img src="~/images/png/send-mail.png" style="height: 20px;" alt="Send" />
        </button>
    </div>
</div>

@*<div class="container">
        <div id="alarm" class="block alarm"></div>
        <div class="block appeal-info">
            <div>Участник по аппеляции</div>
            <div style="font-weight:bold;">№ <span>@Model.ChatSession.AppealNumber</span></div>
            <div id="onlineStatus" style="font-weight:bold; color: #009966;">Отключен от чата</div>
        </div>

        <ul id="messagesList" class="block message-history">
            @foreach (var message in Model.Messages)
            {
                var messageDate = message.CreateDate.ToString("G");

                var isExpert = message.NickName.Contains("Член КК");

                var isCurrent = isExpert && message.NickName.Contains(Model.ExpertKey.ToString());

                var nickname = isCurrent ? "Вы" : message.NickName;

                <li>
                    <div class="message @(isExpert ? "place-left" : "place-right")">
                        @switch (message.ChatMessageTypeId)
                        {
                            case ChatMessageTypes.Joined:
                                @nickname @(isCurrent ? " подключились" : " подключился") @:к консультации <b>(@messageDate) </b>
                                break;
                            case ChatMessageTypes.Message:
                                <div class="message-bubble">@Html.Raw(message.MessageString)</div>@nickname <b>(@messageDate)</b>
                                break;
                            case ChatMessageTypes.Leave:
                                @nickname @(isCurrent ? " покинули" : " покинул") @:консультацию <b>(@messageDate)</b>
                                break;
                        }
                    </div>
                </li>
            }
        </ul>

        @if (!Model.IsFinished)
        {
            <div id="interactiveBlock">
                <div class="block" style="text-align: right;">До конца консультации осталось: <b id="remainingTime">00</b></div>

                <div class="block" style="flex: none;">
                    <div id="quickReplyBlock" class="quick-reply" style="display: none;">
                        <div style="border-bottom: 1px solid #000; padding: 10px;">
                            <input id="filterText" style="width: 100%; padding: 8px 16px; border-radius: 16px; border: none;" type="text" placeholder="Введите текст" />
                        </div>
                        <div style="overflow-y: auto; max-height: 200px;">
                            @foreach (var reply in Model.QuickReplies)
                            {
                                <div class="list-item">@reply.MessageText</div>
                            }
                        </div>
                    </div>

                    <textarea id="messageText" class="message-text" rows="5" autocomplete="off" placeholder="Введите сообщение..."></textarea>
                </div>
                <div class="block buttons">
                    <button id="quickReplyButton" class="form-button">Быстрый ответ</button>
                    <button id="sendButton" class="form-button send-button">Отправить</button>
                </div>
            </div>
        }
    </div>*@