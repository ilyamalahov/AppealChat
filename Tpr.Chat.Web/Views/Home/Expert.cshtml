@using Tpr.Chat.Core.Models
@model Tpr.Chat.Web.Models.ExpertViewModel

@section Styles {
    <link rel="stylesheet" type="text/css" href="~/css/expert.css" />
}

@section Scripts {
    <script>
        var appealId = @Json.Serialize(Model.SessionModel.AppealId);
        var expertKey = @Json.Serialize(Model.ExpertKey);
    </script>
    <script src="~/js/expert.js"></script>
}

<div class="main">
    <div class="main-header">
        <div class="title">Участник аппеляции</div>
        <div class="status-block">
            <div class="online-status" id="onlineStatus"></div>
            <div class="write-status" id="writeStatus">Печатает...</div>
        </div>
    </div>
    <div style="flex: auto; display: flex; position:relative; min-height: 0;">
        <ul id="messagesList" class="message-history">
            @foreach (var message in Model.Messages)
            {
                var messageDate = message.CreateDate.ToString("T");

                var isExpert = message.NickName != "Апеллянт";

                var isCurrent = message.NickName == "Член КК № " + Model.ExpertKey;

                @switch (message.ChatMessageTypeId)
                {
                    case ChatMessageTypes.Joined:
                        message.MessageString = isCurrent ? "Вы подключились к консультации" : message.NickName + " подключился к консультации";

                        <li class="message-status"><div class="message @(isExpert ? "place-left" : "place-right")">@message.MessageString <b class="message-date">@messageDate</b></div></li>
                        break;
                    case ChatMessageTypes.Message:
                        var nickname = isCurrent ? "Вы" : message.NickName;

                        <li>
                            <div class="message @(isExpert ? "place-left" : "place-right")">
                                <div class="message-bubble">@Html.Raw(message.MessageString)</div>@nickname <b class="message-date">@messageDate</b>
                            </div>
                        </li>
                        break;
                    case ChatMessageTypes.Leave:
                        message.MessageString = isCurrent ? "Вы покинули консультацию" : message.NickName + " покинул консультацию";

                        <li class="message-status"><div class="message @(isExpert ? "place-left" : "place-right")">@message.MessageString <b class="message-date">@messageDate</b></div></li>
                        break;
                    case ChatMessageTypes.ChangeExpert:
                        <li class="message-status"><div class="message place-left">@message.MessageString</div></li>
                        break;
                    case ChatMessageTypes.FirstExpert:
                        <li class="message-status"><div class="message @(isExpert ? "place-left" : "place-right")">@message.NickName подключился к консультации. Вы можете задать ему свои вопросы</div></li>
                        break;
                    case ChatMessageTypes.EarlyComplete:
                        <li class="message-status"><div class="message @(isCurrent ? "place-left" : "place-right")">Апеллянт досрочно завершил консультацию</div></li>
                        break;
                }
            }
        </ul>
        @if (Model.SessionModel.IsActive)
        {
            <div id="quickReply" class="overlay" style="display:none;">
                <div class="quick-reply">
                    <div class="filter-block"><input id="filterText" class="filter-text" type="text" placeholder="Введите текст" /></div>
                    <ul id="replyList" class="reply-list">
                        @foreach (var reply in Model.QuickReplies)
                        {
                            <li class="reply-item">@reply.MessageText</li>
                        }
                    </ul>
                </div>
            </div>
        }
    </div>
    @if (Model.SessionModel.IsActive)
    {
        <div id="messageForm" class="main-footer">
            <button id="quickReplyButton" class="custom-button reply-button"><img src="~/images/chat/quick-reply.svg" style="height: 20px;" alt="QuickReply" /></button>
            <textarea id="messageText" class="message-text" data-min-rows="1" rows="1" autocomplete="off" maxlength="500" placeholder="Введите сообщение..."></textarea>
            <button id="sendButton" class="custom-button send-button"><img src="~/images/chat/send.svg" style="height: 20px;" alt="Send" /></button>
        </div>
    }
</div>