@using Tpr.Chat.Core.Models
@model Tpr.Chat.Web.Models.IndexViewModel

@{
    ViewData["Title"] = "Home Page";
}

@section Styles {
    <link rel="stylesheet" type="text/css" href="~/css/appeal.css" />
}

@section Scripts {
    <script>
        var appealId = "@Model.ChatSession.AppealId";
        var expertKey = "@Model.ExpertKey";
    </script>
    <script type="text/javascript" src="~/js/appeal.js"></script>
}

<partial name="_SideMenu" />

<div class="container">
    <partial name="_Header" />
    <div class="content">
        <partial name="_Sidebar" />
        <div class="main">
            <div class="main-header">
                <div class="moscow-time">
                    <div class="moscow-value">00:00</div>
                    <div class="moscow-caption">минуты осталось</div>
                </div>
                <div class="title-status">
                    <div class="title">Член конфликтной комиссии <span id="expertNumber">отсутствует</span></div>
                    <div class="status-block">
                        <div class="online-status" id="onlineStatus"></div>
                        <div class="write-status" id="writeStatus">Печатает...</div>
                    </div>
                </div>
                <button class="custom-button switch-button"><img src="~/images/chat/switch.png" alt="Сменить консультанта" /></button>
            </div>
            <ul id="messagesList" class="message-history">
                @foreach (var message in Model.Messages)
                {
                    var isCurrent = message.NickName == "Апеллянт";
                    var messageDate = message.CreateDate.ToString("T");

                    @switch (message.ChatMessageTypeId)
                    {
                        case ChatMessageTypes.Message:
                            var nickname = isCurrent ? "Вы" : message.NickName;
                            <li>
                                <div class="message @(isCurrent ? "place-left" : "place-right")">
                                    <div class="message-bubble">@Html.Raw(message.MessageString)</div>@nickname <b class="message-date">@messageDate</b>
                                </div>
                            </li>
                            break;
                        case ChatMessageTypes.Joined:
                            @if (isCurrent)
                            {
                                <li class="message-status"><div class="message place-left">Вы подключились к консультации <b class="message-date">@messageDate</b></div></li>
                            }
                            break;
                        case ChatMessageTypes.Leave:
                            @if (isCurrent)
                            {
                                <li class="message-status"><div class="message place-left">Вы покинули консультацию <b class="message-date">@messageDate</b></div></li>
                            }
                            break;
                        case ChatMessageTypes.ChangeExpert:
                            <li class="message-status"><div class="message place-left">@message.MessageString</div></li>
                            break;
                        case ChatMessageTypes.FirstExpert:
                            <li class="message-status"><div class="message @(isCurrent ? "place-left" : "place-right")">@message.NickName подключился к консультации. Вы можете задать ему свои вопросы</div></li>
                            break;
                    }
                }
            </ul>
            <div class="main-footer">
                <textarea id="messageText" maxlength="1000" class="message-text" data-min-rows="1" rows="1" autocomplete="off" placeholder="Введите сообщение..."></textarea>
                <button id="sendButton" class="custom-button send-button"><img src="~/images/chat/send.svg" alt="Отправить" /></button>
            </div>
        </div>
    </div>
</div>

<div id="modal" style="display: none;" class="overlay center-content"></div>